【要点まとめ】

●線形回帰
線形とはざっくり説明すると「比例」のこと
y = ax + b（2次元）
z = ax + by + c（3次元）
n次元における超平面の方程式は以下となる
y = a0 + a1・x1 + a2・x2 + ... + a(n-1)・x(n-1)

※数列Σの形がでてきたら、ベクトルに直せないかということを考えるのが大事！
 逆にベクトルの形の式が理解しづらいなら、Σに戻してみて検証してみるのも有効
※また、一般的な表記方法について覚えておくことは重要（論文とかは当然それで書かれている）…太文字はベクトルを表す、など

また、ベクトルの形は常に意識したほうがよい。
実装時にエラーが発生した場合、まず疑うのはそれ（shapeで見ると良い）

●データの分割とモデルの汎化性能測定
手元に無いデータが入力されたときに適切に予測したいので、モデルを生成する際は手元の全てのデータを学習に使うのではなく
何割かのデータは検証用に残して学習させる。

●線形回帰モデル
残差平方和について
二乗誤差の総和をとる（なぜ二乗するのか、損失関数の設計につながるためこの手の疑問は持ち続けたほうがいい）
また、二乗損失は一般的に外れ値に弱い（外れ値との差が二乗されて跳ねるため。それらを克服する設計もある）

公式についてはテキストにも記載があるため、あらためてここに書くことは不要と考えるが
今後さらなる理解のために追記する必要がでてくるかもしれないので、その際は知識定着の意味でもここに書いていきたい。
